-- super disc box
-- by farbs

version="1.0"

-- fixed palette
-- skin tones to yellow and orange
poke(0x5f2e,1) -- keep extended palette
pal(9,15+128,1) -- skin tone 1
pal(4,14+128,1) -- skin tone 2
pal(8,8+128,1) -- darker red
pal(1,2+128,1) -- darkest red
pal(11,4,1) -- ground
pal(3,4+128,1) -- ground
palt(0,false) -- black isn't transparent
palt(12,true) -- sky blue is!

-- no key repeat
poke(0x5f5c,255)

camerax=0
cameray=0

function _init()
 splash()
 title()
 music(13)
 restart()
end

function restart()
 sfx(17)
 playerx = 64
 playery = 64
 playerdx = 0
 playerdy = 0
 inputx = 0
 inputy = 0
 pspr = 6
 discs={}
 bullets={}
 weapon=pistol()
-- weapon=bazooka()
 weapons={revolver,machinegun,minigun,dualpistol,shotgun,discgun,katana,bazooka,grenadelauncher,mines,flamethrower,laserrifle}
 lastweapon=nil
 weaponcooldown=0
 boxcooldown=1
 weapongrabx=0
 weapongraby=0
 frame=0
 boxx=rnd(92)+16
 boxy=rnd(32)+16
 spawncooldown=60
 lasercooldown=0
 boxparticles()
 dead=false
 deadcooldown = 0
 restartcooldown = 0
 newhighscore=false
 showingbest=false
 score=0
 particles={}
 shake=0
 xflip=false
end

function _update60()
 if dead then
  deadcooldown-=1
  if deadcooldown<-120 then
   deadcooldown=30
   showingbest=(showingbest==false)
  end
  restartcooldown=max(restartcooldown-1,0)
 end

 -- player motion
 if dead==false then
	 inputx = 0
	 inputy = 0
	 if btnp() then
	  flipx=true
	 end
	 if btnp() then
	  flipx=false
	 end
	 if btn() then
	  inputx -= 1
	 end
	 if btn() then
	  inputx += 1
	 end 
	 if btn() then
	  inputy -= 1
	 end
	 if btn() then
	  inputy += 1
	 end
	 if btnp() then
	  sfx(18)
	 end
	 if inputx != 0 and inputy != 0 then
	  -- chording
	  inputx *= 0.707
	  inputy *= 0.707
	 end
	 -- accelerate
	 playerdx += inputx * 1
	 playerdy += inputy * 1 + 0.25
	 -- cap speed
	 local spd = sqrt(playerdx*playerdx + playerdy*playerdy)
	 if inputx == 0 and inputy == 0 then
	  if spd <= 0.1 then
	   playerdx = 0
	   playerdy = 0
	  else
		  local spdscale = (spd-0.1)/spd
		  playerdx *= spdscale
		  playerdy *= spdscale
		 end
	 end
	 if spd > 2 then
	  playerdx *= 2 / spd
	  playerdy *= 2 / spd
	 end
	 
	 -- step
	 playerx += playerdx
	 playery += playerdy
	 
	 -- walls bounce
	 if playerx<0 then
	   playerx = 0
	   playerdx = abs(playerdx)
	  end
	  if playerx>=128 then
	   playerx = 128
	   playerdx = -abs(playerdx)
	  end
	  if playery<=0 then
	   playery = 0
	   playerdy = abs(playerdy)
	  end
	  if playery>=128 then
	   playery = 128
	   playerdy = -abs(playerdy)
	  end
	
	 
	 if inputx != 0 or inputy != 0 then
	  -- animate
	  local running = {6,8,10,12,14}
	  pspr = running[(flr(frame/3)%#running)+1]
	 else
	  local idle = {32,34,36,38,40}
	  pspr = idle[(flr(frame/4)%#idle)+1]
	 end
	 
	 -- smoke
	 if inputy < 0 then
	  local spark = oldspark()
	  spark.a=0
	  spark.cooldown=5+flr(rnd(5))
	  spark.x=playerx-1
	  spark.y=playery+2
	  if flipx then
	   spark.x+=5
	  else
	   spark.x-=5
	  end
	  spark.c=7
	  add(particles,spark)
	 end
	 
	 -- laser autofire
	 if lasercooldown>0 then
	  lasercooldown-=1
	  if lasercooldown <=0 then
    -- fire!
	   local xs = playerx
	   local xe = 0
	   if flipx then
	    xs-=4
	    xe=0
	   else
	    xs+=4
	    xe=128
	   end
	   add(bullets,makelaser(xs,xe,playery))
	   shake=max(shake,3)
	  end
	 end
	else
	 -- restart input
	 if deadcooldown<=0 and (btnp() or btnp()) then
	  restart()
	  return
	 end
	end
 
 -- particle update and finish
 for p in all(particles) do
  if p.update(p) == false then
   del(particles,p)
  end
 end
 
 -- check for box hit
 weaponcooldown=max(weaponcooldown-0.015,0)
 boxcooldown=max(boxcooldown-0.05,0)
 if abs(playerx-boxx)<8 and abs(playery-boxy)<8 then
  boxparticles() -- exit particles
  local boxa=rnd()
  boxx=(sin(boxa)*60+boxx-4)%120+4
  boxy=(cos(boxa)*60+boxy-4)%120+4
  boxparticles() -- entry particles  
  score+=1
  if score>$0x5e00 then
   newhighscore=true
   poke4(0x5e00,score)
  end
  
  -- new weapon!
  local options = {}
  for w in all(weapons) do
   if lastweapon!=w and (score>10 or w!=discgun) then
    add(options, w)
   end
  end
  lastweapon=options[flr(rnd()*#options)+1]
  weapon=lastweapon()
  if lastweapon==discgun then
   sfx(22)
  else
   sfx(14)
  end
  weapongrabx=playerx
  weapongraby=playery
  weaponcooldown=1
  boxcooldown=1
 end
 
 -- move discs
 for d in all(discs) do
  -- cool down or move
  if d.hitcooldown>0 then
   d.hitcooldown-=1
  end
  if d.cooldown > 0 then
   d.cooldown -= 1
  else
   -- seeking!
   if d.seek then
    local sdx = playerx-d.x
    local sdy = playery-d.y
    local sdlen = sqrt(sdx*sdx+sdy*sdy)
    d.dx *= 0.99
    d.dy *= 0.99
    if sdlen>5 then
     d.dx += sdx * 0.01 / sdlen
     d.dy += sdy * 0.01 / sdlen
    end
   end
	  d.x += d.dx
	  d.y += d.dy
	  local hit=false
	  if d.x<0 then
	   d.x = 0
	   d.dx = abs(d.dx)
	   hit=true
	  end
	  if d.x>=128 then
	   d.x = 128
	   d.dx = -abs(d.dx)
	   hit=true
	  end
	  if d.y<=0 then
	   d.y = 0
	   d.dy = abs(d.dy)
	   hit=true
	  end
	  if d.y>=128 then
	   d.y = 128
	   d.dy = -abs(d.dy)
	   hit=true
	  end
			if hit and d.r>10 then
			 shake=max(shake,4)
			 sfx(15)
			end
	  -- check for player collision
	  if dead==false then
		  local dx = playerx-d.x
		  local dy = playery-d.y
		  if dx*dx+dy*dy<(d.r+0)*(d.r+0) then
		   dead=true
		   deadcooldown=60
		   restartcooldown=60
		   sfx(16)
		   d.blood=true
		   for i=1,5 do
	 	   addsparks(d,2,10,0,1)
	 	   addsparks(d,2,20,0,1)
	 	   addsparks(d,2,30,0,1)
	 	   addsparks(d,8,40,0,1)
	 	   addsparks(d,8,50,0,1)
	 	  end
	 	  shake=15
		  end
		 end
	 end
	 -- spin regardless of movement
  d.frame = (d.frame+1)%8
 end
 
 -- spawn discs
 if dead==false then
	 spawncooldown -= 1
	 if spawncooldown <= 0 then
	  if score>=10 or #discs<max(score,1) then
		  local spawnx=rnd(128)
		  local spawny=rnd(128)
		  if rnd() < 0.5 then
		   -- three discs
				 local a = rnd()
				 local r = 1.5
	 			makedisc(7,20,false,60,spawnx,spawny,sin(a)*r,cos(a)*r)
	 			makedisc(7,20,false,75,spawnx,spawny,sin(a)*r,cos(a)*r)
	 			makedisc(7,20,false,90,spawnx,spawny,sin(a)*r,cos(a)*r)
	 		else
	 		 if rnd() < 0.5 then
	 		  -- big disc
					 local a = rnd()
					 local r = 0.75
	  	  makedisc(13,100,false,60,spawnx,spawny,sin(a)*r,cos(a)*r)
	  	 else
	  	  -- seeker
	  			makedisc(7,20,true,60,spawnx,spawny,0,0)
	  		end
	  	end
  	end
   spawncooldown = 180/(1+sqrt(score)*0.1)
	 end
  frame += 1
	end
	
	-- fire weapon
	if weapon.cooldown>0 then
	 -- cooldown, don't fire
	 weapon.cooldown-=1
	else
	 -- fire?
	 if dead==false then
		 local fire=false
		 if weapon.autofire then
		  fire=btn() or btn()
		 else
		  fire=btnp() or btnp()
		 end
		 if fire then
		  weapon.fire(weapon)
		  weapon.cooldown=weapon.fireperiod
		 end
		end
	end
	if dead==false then
 	weapon.update(weapon)
 end
	
	-- move bullets
	for b in all(bullets) do
	 if b.update(b) == false then
	  del(bullets,b)
	 end
	end
	
	-- camera motion
	camerax = camerax*0.9+(playerx-64)*0.375*0.1
	cameray = cameray*0.9+(playery-64)*0.375*0.1
 if shake>0 then
  local a=rnd()
  camerax+=sin(a)*shake*0.5
  cameray+=cos(a)*shake*0.5
  shake-=1
 end
end

function makedisc(r,health,seek,cooldown,x,y,dx,dy)
 local disc={}
 disc.x = x
 disc.y = y
 disc.r = r
 disc.seek = seek
 disc.health = health
 disc.hitcooldown=0
 disc.dx=dx
 disc.dy=dy
 disc.cooldown=cooldown
 disc.frame=flr(rnd(8))
 disc.blood=false
 add(discs, disc)
end

function _draw()
 cls(12)
 camera(camerax,cameray)
 --rectfill(0-2,0-2,128+2,128+2,0)
 --rectfill(0,0,128,128,12)

 -- background tiles
 map(0,0,-64,-64,32,32,1)
 
 -- box strings
 line(boxx-3,boxy,boxx-3,0,12)
 line(boxx-2,boxy,boxx-2,0,13)
 line(boxx-1,boxy,boxx-1,0,12)
 
 line(boxx+0,boxy,boxx+0,0,12)
 line(boxx+1,boxy,boxx+1,0,13)
 line(boxx+2,boxy,boxx+2,0,12)
 
 -- background discs
 for d in all(discs) do
  if d.cooldown>0 then
   local rx=flr(d.x-0.5)
   local ry=flr(d.y-0.5)
   circ(rx,ry,d.cooldown*0.5+d.r,13)
   circ(rx+1,ry,d.cooldown*0.5+d.r,13)
   circ(rx,ry+1,d.cooldown*0.5+d.r,13)
   circ(rx+1,ry+1,d.cooldown*0.5+d.r,13)
  end
 end
 drawdiscs(true)

 -- foreground tiles
 map(0,0,-64,-64,32,32,2)
 
 -- player
 if dead==false then
  -- body
	 spr(pspr, playerx-8, playery-8, 2, 2, flipx)

		-- weapon
		weapon.draw(weapon)
	else
	 circfill(playerx,playery,10,2)
	end
	
 -- foreground discs
 drawdiscs(false)
	
	-- box
 spr(21,boxx-4,boxy-4+boxcooldown*sin(boxcooldown)*-8)
	
	-- bullets
	for b in all(bullets) do
	 b.draw(b)
	end
	
	-- particles
	for p in all(particles) do
	 p.draw(p)
	end
	
	-- hud
	if weaponcooldown>0 then
	 local lift=((1-weaponcooldown)*0.0+1.0*(1-weaponcooldown)*(1-weaponcooldown))*-128
	 shadowprint(weapon.name,weapongrabx-#(weapon.name)*2,weapongraby-16+lift,7)
	end
	camera()
	if dead==false then
  scoreprint(score,64,2,2,newhighscore,true)
	else
	 -- background
	 rectfill(0,32,128,98,1)

	 -- game over
	 local write=min(60-deadcooldown,30)*2
	 pal(7,0)
	 sspr(1,122,write,5,64-write,32+8+2,write*2,10)
	 pal(7,7)
	 sspr(1,122,write,5,64-write,32+8,write*2,10)
	 
	 -- boxes:/best:
	 local box={33,116,37,5}
	 local number=score
	 local exclaim=newhighscore
	 if showingbest then
	  box={1,116,30,5}
	  number=$0x5e00
	  exclaim=false
	 end
	 local numstr=tostr(number)
	 local width=box[3]*2+4+(#numstr)*7*2+2
	 if exclaim then
	  width += 7*2
	 end
  write=min(max(30-deadcooldown,0),30)*width/30
  local y=32+8+10+6
	 pal(7,0)
	 sspr(box[1],box[2],box[3],box[4],64-write*0.5,y+2,box[3]*2,10)
	 pal(7,7)
	 sspr(box[1],box[2],box[3],box[4],64-write*0.5,y,box[3]*2,10)
	 scoreprint(number,64-write*0.5+box[3]*2+8,y,2,exclaim,false)
	 rectfill(64+write*0.5,y,y+128,y+12,1) -- hiding rect
	 local message="don't touch the discs!"
	 if newhighscore then
 	 message="new high score!"
 	elseif score>=10 then
  	 message="only " .. tostr($0x5e00-score+1) .. " to new highscore!"
 	end
 	shadowprintcentered(message, 64, 32+12+20+12, 7)
	 shadowprintcentered("press  or  to restart",64-4,32+12+20+12+8,7)
	end
end

function drawdiscs(background)
 for d in all(discs) do
  if (d.cooldown > 0 and background) or (d.cooldown==0 and background==false) then
	  if d.cooldown > 0 then
	   pal(0,13)
	   pal(1,12)
	   pal(7,12)
	   pal(6,12)
	   pal(5,12)
	  end
	  if d.blood or d.hitcooldown > 0 then
	   pal(7,14)
	   pal(6,8)
	   pal(5,2)
	  end
	  if d.seek==false then
	   if d.r>10 then
	  	 spr(64+flr(d.frame/2)*4, d.x-16, d.y-16, 4, 4, d.dx<0)
	  	else
	  	 spr(160+flr(d.frame/2)*2, d.x-8, d.y-8, 2, 2, d.dx<0)
	  	end
	  else
	 	 spr(168+flr(d.frame/2)*2, d.x-8, d.y-8, 2, 2, playerx<d.x)
	  end
		 pal(0,0)
		 pal(1,1)
		 pal(7,7)
		 pal(6,6)
		 pal(5,5)
		end
	end
end

function prettyprint(string, x, y, c)
 print(string,x-1,y-1,0)
 print(string,x,y-1,0)
 print(string,x+1,y-1,0)
 print(string,x-1,y,0)
 print(string,x+1,y,0)
 print(string,x-1,y+1,0)
 print(string,x,y+1,0)
 print(string,x+1,y+1,0)
 print(string,x,y,c)
end

function shadowprintcentered(string, x, y, c)
 local xc=x-(#string)*2
 shadowprint(string, xc, y, c)
end

function shadowprint(string, x, y, c)
 print(string,x,y+1,0)
 print(string,x,y,c)
end

function scoreprint(number,x,y,scale,exclaim,center)
 local chars=tostr(number)
 if exclaim then
  chars=chars.."!"
 end
 for i=1,#chars do
  local char=sub(chars,i,i)
  local sx=0
  if char=="0" then
   sx=0
  elseif char=="1" then
   sx=1
  elseif char=="2" then
   sx=2
  elseif char=="3" then
   sx=3
  elseif char=="4" then
   sx=4
  elseif char=="5" then
   sx=5
  elseif char=="6" then
   sx=6
  elseif char=="7" then
   sx=7
  elseif char=="8" then
   sx=8
  elseif char=="9" then
   sx=9
  elseif char=="!" then
   sx=10
  end
  sx=sx*4+1
  local startx=x+7*(i-1)*scale
  if center then
   startx=x-#chars*3.5*scale+7*(i-1)*scale
  end
  pal(7,0)
  sspr(sx,97,3,5,startx,y+2,6*scale,5*scale)
  pal(7,7)
  sspr(sx,97,3,5,startx,y,6*scale,5*scale)
 end
end

-->8
-- weapons
function defaultweapon()
 local default={}
 default.autofire=false
 default.cooldown=0
 default.name="unnamed"
 default.sprite=128
 default.sprwidth=1
 default.sprheight=1
 default.sprx=0
 default.spry=0
 default.update = function()
 end
 default.draw = function(w)
  local drawx = playerx
  local drawy = playery-4+w.spry
  if flipx then
   drawx-=4+8+w.sprx+8*(w.sprwidth-1)
  else
   drawx+=4+w.sprx
  end
  spr(w.sprite,drawx,drawy,w.sprwidth,w.sprheight,flipx)
 end
 return default
end

function knockback(dx)
 if flipx then
  playerdx+=dx
 else
  playerdx-=dx
 end
end

function pistol()
 local pistol=defaultweapon()
 pistol.fireperiod=6
 pistol.name="pistol"
 pistol.sprx=-1
 
 pistol.fire = function(r)
  local bx = 7
  local bdx = 4
  local by = 0
  local bdy = 0
  if flipx then
   bx = -bx
   bdx = -bdx
  end
  add(bullets,makebullet(playerx+bx,playery+by,bdx,bdy,10))
  shake=max(shake,2)
  knockback(1)
  sfx(19)
 end
 return pistol
end

function revolver()
 local revolver=defaultweapon()
 revolver.fireperiod=6
 revolver.name="revolver"
 revolver.sprite=150
 revolver.sprwidth=2
 
 revolver.fire = function(r)
  local bx = 7
  local bdx = 4
  local by = 0
  local bdy = 0
  if flipx then
   bx = -bx
   bdx = -bdx
  end
  local bullet=makebullet(playerx+bx,playery+by,bdx,bdy,50)
  bullet.sprite=130
  add(bullets,bullet)
  shake=max(shake,5)
  knockback(1)
  sfx(20)
 end
 return revolver
end

function machinegun()
 local machinegun=defaultweapon()
 machinegun.fireperiod=4
 machinegun.autofire=true
 machinegun.name="machinegun"
 machinegun.sprite=144
 machinegun.sprwidth=2
 machinegun.sprx=-4
 
 machinegun.fire = function(r)
  local bx = 7
  local bdx = 4
  local by = 0
  local bdy = rnd()*0.5-0.25
  if flipx then
   bx = -bx
   bdx = -bdx
  end
  add(bullets,makebullet(playerx+bx,playery+by,bdx,bdy,10))
  shake=max(shake,2)
  knockback(1)
  sfx(19,2)
 end
 return machinegun
end

function minigun()
 local minigun=defaultweapon()
 minigun.fireperiod=1
 minigun.autofire=true
 minigun.name="minigun"
 minigun.sprite=140
 minigun.sprx=-3
 minigun.spry=-8
 minigun.sprwidth=2
 minigun.sprheight=2
 
 minigun.fire = function(r)
  for i=1,3 do
	  local bx = 11
	  local bdx = 8
	  local by = 0
	  local bdy = rnd()*8-4
	  if flipx then
	   bx = -bx
	   bdx = -bdx
	  end
	  add(bullets,makebullet(playerx+bx,playery+by,bdx,bdy,5))
	 end
	 shake=max(shake,5)
  knockback(2)
  sfx(19,2)
 end
 return minigun
end

function dualpistol()
 local dualpistol=defaultweapon()
 dualpistol.fireperiod=6
 dualpistol.name="dual pistol"
 
 dualpistol.draw = function(r)
  local drawx = playerx
  local drawy = playery-4
  spr(128,drawx+3,drawy,1,1,false)
  spr(128,drawx-11,drawy,1,1,true)
 end
 
 dualpistol.fire = function(r)
  local bx = 7
  local bdx = 4
  local by = 0
  local bdy = 0
  add(bullets,makebullet(playerx+bx,playery+by,bdx,bdy,10))
  add(bullets,makebullet(playerx-bx,playery+by,-bdx,bdy,10))
  shake=max(shake,2)
  sfx(19)
 end
 return dualpistol
end

function shotgun()
 local shotgun=defaultweapon()
 shotgun.fireperiod=30
 shotgun.name="shotgun"
 shotgun.sprite=148
 shotgun.sprwidth=2
 shotgun.sprx=-5
 shotgun.spry=1
 
 shotgun.fire = function(r)
  for i=1,9 do
	  local bx = 7
	  local bdx = 2+rnd()*12
	  local by = 0
	  local bdy = rnd()*4-2
	  if flipx then
	   bx = -bx
	   bdx = -bdx
	  end
	  local b = makebullet(playerx+bx,playery+by,bdx,bdy,10)
	  b.drag=0.7
	  add(bullets,b)
	 end
  shake=max(shake,3)
  knockback(2)
  sfx(21)
 end
 return shotgun
end

function discgun()
 local discgun=defaultweapon()
 discgun.fireperiod=6
 discgun.name="disc gun?!"
 discgun.sprite=154
 discgun.sprx=-2
 
 discgun.fire = function(r)
  local bx = 7
  local bdx = 3
  local by = 0
  local bdy = 0
  if flipx then
   bx = -bx
   bdx = -bdx
  end
		makedisc(7,20,false,0,playerx+bx,playery+by,bdx,bdy)
  shake=max(shake,2)
  knockback(5)
  sfx(23)
 end
 return discgun
end

function katana()
 local katana=defaultweapon()
 katana.fireperiod=12
 katana.name="katana"
 katana.basedraw=katana.draw
 
 katana.draw = function(k)
  if k.cooldown==0 then
   k.sprite=198
   k.sprheight=2
   k.sprwidth=1
   k.sprx=-4
   k.spry=-1
  else
   k.sprite=199
   k.sprheight=1
   k.sprwidth=2
   k.sprx=3
   k.spry=0
  end
  k.basedraw(k)
 end
 
 katana.fire = function(r)
  local bx=16
  if flipx then
   bx = -bx
  end
  for d in all(discs) do
   if d.cooldown==0 then
	   local dx=max(abs(playerx+bx-d.x)-16,0)
	   local dy=playery-d.y
	   if dx*dx+dy*dy<(d.r+8)*(d.r+8) then
	    -- hit compressed space
	    hitdisc(d,50)
	    
	    if flipx then
	     d.dx=-abs(d.dx)
	    else
	     d.dx=abs(d.dx)
	    end
	   end
	  end
  end
  shake=max(shake,2)
  sfx(35)
 end
 return katana
end

function bazooka()
 local bazooka=defaultweapon()
 bazooka.fireperiod=60
 bazooka.name="bazooka"
 bazooka.sprite=146
 bazooka.sprwidth=2
 bazooka.sprx=-6
 
 bazooka.fire = function(r)
  local bx = 9
  local bdx = 1
  if flipx then
   bx = -bx
   bdx = -bdx
  end
  add(bullets,makeshell(playerx+bx,playery,bdx))
  shake=max(shake,3)
  sfx(36)
 end
 return bazooka
end

function grenadelauncher()
 local gl=defaultweapon()
 gl.fireperiod=60
 gl.name="grenade launcher"
 gl.sprite=158
 gl.sprwidth=2
 gl.sprx=-4
 
 gl.fire = function(g)
  local bx = 7
  local bdx = 3
  if flipx then
   bx = -bx
   bdx = -bdx
  end
  add(bullets,makegrenade(playerx+bx,playery,bdx))
  sfx(37)
 end
 return gl
end

function mines()
 local mines=defaultweapon()
 mines.fireperiod=60
 mines.name="mines"
 
 mines.draw = function(m)
  local drawx = playerx
  local drawy = playery
  pal(8,0)
  spr(137,drawx-4,drawy,1,1)
  pal(8,8)
 end
 
 mines.fire = function(m)
  add(bullets,makemine(playerx,playery+4))
  sfx(38)
 end
 return mines
end

function flamethrower()
 local ft=defaultweapon()
 ft.fireperiod=0
 ft.autofire=true
 ft.name="flamethrower"
 ft.sprite=152
 ft.sprwidth=2
 ft.sprx=-2
 ft.spry=0
 
 ft.fire = function(f)
  local bx = 7
  local bdx = 6+rnd()*3-1.5
  local bdy = -rnd()*2
  if flipx then
   bx = -bx
   bdx = -bdx
  end
  add(bullets,makeflame(playerx+bx,playery,bdx,bdy))
  sfx(39,2)
 end
 return ft
end

function laserrifle()
 local laserrifle=defaultweapon()
 laserrifle.fireperiod=60
 laserrifle.name="laser rifle"
 laserrifle.basedraw=laserrifle.draw
 
 laserrifle.update = function(l)
  if l.cooldown > 30 then
   -- collide with discs
   local hitx=playerx
   if flipx then
    hitx-=8
   else
    hitx+=8
   end
	  for d in all(discs) do
	   if d.cooldown==0 then
		   local dx=max(abs(d.x-hitx)-4,0)
		   local dy=playery-d.y
		   if dx*dx+dy*dy<(d.r+3)*(d.r+3) then
		    -- hit compressed space
		    hitdisc(d,100)
	    end
	   end
	  end
  end
 end
 
 laserrifle.draw = function(l)
  if l.cooldown>30 then
   l.sprite=138
   l.sprwidth=1
   l.sprx=5
   l.basedraw(l)
  end
  l.sprite=201
  l.sprwidth=2
  l.sprx=-3
  l.basedraw(l)
 end
 
 laserrifle.fire = function(l)
  sfx(40)
  lasercooldown=30
 end
 
 return laserrifle
end

-->8
-- bullets
function makebullet(x, y, dx, dy, damage)
 local bullet={}
 bullet.lastx = x
 bullet.x = x
 bullet.lasty = y
 bullet.y = y
 bullet.dx = dx
 bullet.dy = dy
 bullet.damage = damage
 bullet.drag=1
 bullet.sprite=129
 
 bullet.draw = function(b)
  spr(b.sprite,b.x-4,b.y-4)
  --line(b.lastx,b.lasty,b.x,b.y,7)
 end
 
 bullet.update = function(b)
  -- move
  b.lastx=b.x
  b.lasty=b.y
  b.x+=b.dx
  b.y+=b.dy
  b.dx *= b.drag
  b.dy *= b.drag
  
  -- collide with discs
  local hit=first_ray_hit(b.lastx,b.lasty,b.x,b.y,2)
  if hit != nil then
   hitdisc(hit,b.damage)
   return false
  end
  
  -- collide with edges
  local alive=b.x>=-2 and b.x<=129 and b.y>=-2 and b.y<=129
  if b.drag < 1 then
   if abs(b.dx)<0.1 and abs(b.dy)<0.1 then
    alive = false
   end
  end
  return alive
 end
 
 return bullet
end

-- bazooka shell
function makeshell(x, y, dx)
 local shell=makebullet(x, y, dx, 0, 0)
 shell.bulletupdate=shell.update
 shell.smokecooldown=0
 shell.update=function(s)
  -- regular bullet update
  local alive = s.bulletupdate(s)
  
  -- now speed up
  s.dx+=sgn(s.dx)*0.1
  
  -- if done, explode
  if alive==false then
   add(bullets,makeexplosion(s.x,s.y,20,30,30))
  else
   -- still going, smoke
   s.smokecooldown-=1
   if s.smokecooldown<=0 then
    add(particles,smokepuff(s.x,s.y,2,0.025,0))
    s.smokecooldown=4+rnd()*2
   end
  end
  
  -- return whether alive
  return alive
 end
 
 shell.draw = function(s)
  spr(131,s.x-4,s.y-4,1,1,s.dx<0)
 end
 

 return shell
end

-- grenade
function makegrenade(x, y, dx)
 local grenade={}
 grenade.lastx = x
 grenade.x = x
 grenade.lasty = y
 grenade.y = y
 grenade.dx = dx
 grenade.dy = -2
 grenade.fuse=60
 
 grenade.draw = function(g)
  spr(132,g.x-3.5,g.y-3.5)
 end
 
 grenade.update = function(g)
  -- move
  g.lastx=g.x
  g.lasty=g.y
  g.x+=g.dx
  g.y+=g.dy
  g.dy+=0.2
  
  -- collide with discs
  local hit=first_ray_hit(g.lastx,g.lasty,g.x,g.y,2)
  if hit != nil then
   g.fuse=0
  end
  
  -- bounce off edges
  if g.x<=0 then
   g.dx=abs(g.dx)*0.75
  end
  if g.x>=128 then
   g.dx=-abs(g.dx)*0.75
  end
  if g.y<=0 then
   g.dy=abs(g.dy)*0.75
  end
  if g.y>=128 then
   g.dy=-abs(g.dy)*0.75
  end
  
	 -- fuse!
	 g.fuse-=1
	 if g.fuse<=0 then
	  add(bullets,makeexplosion(g.x,g.y,20,30,30))
	  return false
	 else
	  return true
	 end
 end 
 
 return grenade
end

-- mine
function makemine(x, y)
 local mine={}
 mine.x = x
 mine.lasty = y
 mine.y = y
 mine.dy = 0
 mine.fuse=60
 
 mine.draw = function(m)
  if m.fuse>0 or frame%16<8 then
   pal(8,0)
  end
  spr(137,m.x-4,m.y-4)
  pal(8,8)
 end
 
 mine.update = function(m)
  -- move
  m.lasty=m.y
  m.y+=m.dy
  m.dy+=0.2
  if m.y>128 then
   m.y=128
   m.dy=0
  end
  
  -- fuse
  if m.fuse>0 then
   m.fuse-=1
  end
  
  -- collide with discs
  local alive=true
  if m.fuse<=0 then
	  local hit=first_ray_hit(m.x,m.lasty,m.x,m.y,3)
	  if hit != nil then
 	  add(bullets,makeexplosion(m.x,m.y,20,30,30))
 	  alive=false
	  end
  end
  return alive
 end
 
 return mine
end

-- flame
function makeflame(x, y, dx, dy)
 local flame={}
 flame.lastx = x
 flame.x = x
 flame.lasty = y
 flame.y = y
 flame.dx = dx
 flame.dy = dy
 flame.fuse=60

 flame.calcradius = function(f)
  flame.radius=(30-abs(flame.fuse-30))*0.375+2
 end
 flame.calcradius(flame)
 
 flame.draw = function(f)
  if rnd()<0.5 then
   if rnd()<0.5 then
    pal(7,10)
   else
    pal(7,8)
   end
  elseif rnd()<0.5 then
   pal(7,4)
  end
  sspr(40+flr(rnd()*4)*8,64,8,8,f.x-f.radius,f.y-f.radius,f.radius*2,f.radius*2,rnd()<0.5,false)
  pal(7,7)
 end
 
 flame.update = function(f)
  f.calcradius(f)
 
  -- move
  f.lastx=f.x
  f.lasty=f.y
  f.x+=f.dx
  f.y+=f.dy
  f.dy+=0.2
  f.dx*=0.9
  f.dy*=0.9
  
  -- collide with discs
  if rnd()<0.5 then
	  local hit=first_ray_hit(f.lastx,f.lasty,f.x,f.y,f.radius)
	  if hit != nil then
	   hitdisc(hit,1)
	  end
	 end
  
  -- bounce off edges
  if f.x<=0 then
   f.dx=abs(f.dx)
  end
  if f.x>=128 then
   f.dx=-abs(f.dx)
  end
  if f.y<=0 then
   f.dy=abs(f.dy)
  end
  if f.y>=128 then
   f.dy=-abs(f.dy)
  end
  
	 -- fuse!
	 f.fuse-=1
	 if f.fuse<=0 then
	  return false
	 else
	  return true
	 end
 end 
 
 return flame
end

-- lasers
function makelaser(xs, xe, y)
 local laser={}
 laser.xs = xs
 laser.xe = xe
 laser.y = y
 laser.cooldown=30
 
 laser.draw = function(l)
  sspr(88+5-flr(laser.cooldown/5),64,1,8,xs,y-4,xe-xs,8)
 end
 
 laser.update = function(l)
  -- collide with discs
  for d in all(discs) do
   if d.cooldown==0 then
	   local dx=max(abs(d.x-(l.xs+l.xe)*0.5)-abs(l.xs-l.xe)*0.5,0)
	   local dy=l.y-d.y
	   if dx*dx+dy*dy<(d.r+3)*(d.r+3) then
	    -- hit compressed space
	    hitdisc(d,100)
    end
   end
  end
  
  -- age
  laser.cooldown-=1
  return laser.cooldown>0
 end

 return laser
end


-- explosion
function makeexplosion(x,y,sr,er,p)
 local explosion={}
 explosion.x=x
 explosion.y=y
 explosion.sr=sr
 explosion.er=er
 explosion.p=p
 explosion.a=0
 shake=max(shake,10)
 sfx(12)
 
 explosion.draw = function(e)
  local col=7
  local alpha=e.a/e.p
  local radius=e.sr+(e.er-e.sr)*alpha
  if alpha>0.5 then
   col=0
  end
  circfill(e.x,e.y,radius,col)
 end
 
 explosion.update = function(e)
  e.a+=1
  local alpha=e.a/e.p  
  local radius=e.sr+(e.er-e.sr)*alpha
  for d in all(discs) do
   if d.cooldown<=0 then
	   local dx=d.x-e.x
	   local dy=d.y-e.y
	   if dx*dx+dy*dy<=(d.r+radius)*(d.r+radius) then
	    hitdisc(d,100)
	   end
	  end
		end
  return e.a<e.p
 end
 
 return explosion
end

-- util
function hitdisc(hit,damage)
 hit.health-=damage
 hit.hitcooldown=4
 if hit.health <= 0 then
		del(discs,hit)
	 addnewsparks(hit,2,0,1)
	 addnewsparks(hit,4,0,1)
	 addnewsparks(hit,8,0,1)
	 addnewsparks(hit,16,0,1)
  add(particles,makeflash(hit.x,hit.y,hit.r,10,5))
  -- death sound
  if hit.r<10 then
   if hit.seek then
    sfx(11)
   else
    sfx(10)
   end
  else
   sfx(13)
  end
 else
  -- damage sound
  sfx(9)
 end
end
-->8
-- collision utils
function first_ray_hit(xs, ys, xe, ye, r)
 local nearest=nil
 local nearest_dist=0
 local x=(xs+xe)*0.5
 local y=(ys+ye)*0.5
 local rdx=(xe-xs)*0.5
 local rdy=(ye-ys)*0.5
 local rlen = sqrt(rdx*rdx+rdy*rdy)
 for d in all(discs) do
  -- skip during cooldown :d
  if d.cooldown==0 then
	  -- get offset
	  local dx = d.x-x
	  local dy = d.y-y
	  
	  -- if zero length
	  -- otherwise do ray
	  if rlen==0 then
	   -- zero length, use radius
	   local sqdist=dx*dx+dy*dy
	   if (nearest==nil or sqdist < nearest_dist ) and sqdist<=(d.r+r)*(d.r+r) then
	    -- hit and nearest!
	    nearest = d
	    nearest_dist=sqdist
	   end
	  else
	   -- get offset in r space
	   local rsda=(dx*rdx+dy*rdy)/rlen
	   local rsdb=(dx*rdy-dy*rdx)/rlen
	   local comp_rsda=max(abs(rsda)-rlen,0)
	   if (nearest==nil or rsda < nearest_dist ) and comp_rsda*comp_rsda+rsdb*rsdb<=(d.r+r)*(d.r+r) then
	    -- hit and nearest!
	    nearest = d
	    nearest_dist=rsda
	   end   
	  end
	 end
	end
 
 -- return best hit
 return nearest
end
-->8
-- particles
function nullparticle()
 local particle={}
 particle.update = function(p)
  return false
 end
 particle.draw = function(p)
 end
 return particle
end

function oldspark()
 local spark=nullparticle()
 spark.update=function(s)
  s.oldx=s.x
  s.oldy=s.y
  s.cooldown=max(s.cooldown-1,0)
  s.x += sin(s.a)*s.cooldown*0.1
  s.y += cos(s.a)*s.cooldown*0.1
  return s.cooldown>0 or (s.c!=7 and s.c!=10)
 end
 spark.draw=function(s)
	 if s.cooldown > 0 then
	  local offsets={}
	  if s.c != 10 and s.c != 7 then
	   offsets={{0,0},{-1,0},{1,0},{0,-1},{0,1}}
	  else
	   offsets={{0,0},{0,1},{1,0},{1,1}}
	  end
	  for o in all(offsets) do
			 line(s.x+o[1], s.y+o[2], s.oldx+o[1], s.oldy+o[2], s.c)
			end
		else
		 circfill(s.x,s.y,2,2)
		end
	end
 return spark
end

function addsparks(d,c,minspeed,amin,amax)
 local ao=rnd()
 for i=1,8 do
  local spark = oldspark()
  spark.a=((ao+i/8)%1)*(amax-amin)+amin
  spark.cooldown=minspeed+flr(rnd(60)*rnd())
  spark.x=d.x+sin(spark.a-0.25)*d.r
  spark.y=d.y+cos(spark.a-0.25)*d.r
  spark.c=c
  spark.update(spark)
  add(particles,spark)
 end
end

function addnewsparks(d,minspeed,amin,amax)
 local ao=rnd()
 for i=1,8 do
  local a=((ao+i/8)%1)*(amax-amin)+amin
  local spark = newspark(d.x+sin(a-0.25)*d.r,d.y+cos(a-0.25)*d.r,a,minspeed+flr(rnd(6)*rnd()),d.r>10)
  spark.update(spark)
  add(particles,spark)
 end
end

function smokepuff(x,y,o,delta,lift)
 local puff=nullparticle()
 local a = rnd()
 local r = rnd()*o
 puff.x=x+sin(a)*o
 puff.y=y+cos(a)*o
 puff.age=0
 puff.delta=delta
 puff.lift=lift
 puff.update=function(p)
  p.age+=p.delta
  p.y-=p.lift
  return p.age<1
 end
 puff.draw=function(p)
  local r=(1-p.age)*6
  if r>4 then
 	 circfill(p.x,p.y+2,r,0)
 	end
  if r>2 then
 	 circfill(p.x,p.y+1,r,0)
	 end
	 circfill(p.x,p.y,r,5)
	end
 return puff
end

function boxparticles()
 for i=1,3 do
  add(particles,smokepuff(boxx,boxy,8,rnd()*0.05+0.025,1))
 end
end

function newspark(x,y,a,spd,big)
 local spark=nullparticle()
 spark.x=x
 spark.y=y
 spark.dx=sin(a)*spd
 spark.dy=cos(a)*spd
 if big then
  spark.offsets={{0,0},{-1,0},{1,0},{0,-1},{0,1}}
 else
  spark.offsets={{0,0},{0,1},{1,0},{1,1}}
 end
 
 spark.update=function(s)
  s.oldx=s.x
  s.oldy=s.y
  s.x += s.dx
  s.y += s.dy
  s.dy+=0.25
  return s.y<128
 end
 spark.draw=function(s)
  for o in all(s.offsets) do
		 line(s.x+o[1], s.y+o[2], s.oldx+o[1], s.oldy+o[2], 10)
		end
	 line(s.x, s.y, s.oldx, s.oldy, 10)
	end
 return spark
end

function makeflash(x,y,r,c,period)
 local flash=nullparticle()
 flash.x=x
 flash.y=y
 flash.r=r
 flash.c=c
 flash.cooldown=period
 flash.first=2

 flash.update=function(f)
  f.cooldown-=1
  return f.cooldown>0
 end
 
 flash.draw=function(f)
  local c=f.c
  -- white flash at first
  if f.first>0 then
   c=7
   f.first-=1
  end
	 circfill(f.x,f.y,f.r+f.cooldown-5,c)
	end
	
 return flash
end
-->8
-- menus
function splash()
 sfx(8)
 while btnp()==false and btnp()==false and time()<8 do
  cls(0)
  local string="fARBS"
  local len=flr(min(max(time()*6-6,0),#string))
  len=max(min(len,30-time()*6),0)
  string=sub(string,0,len)
  if (time()*4)%2<1 then
   string=string.."_"
  end
  if time()<7 then
   print(string,64-6*2,64-5,7)
  end
  if time()>=7 then
    sfx(-1)
  end
  flip()
 end
 cls(0)
 flip()
 sfx(-1)
end

function title()
 music(23)
 local scroll=0
 local frame=0
 while btnp()==false and btnp()==false do
  cls(12)
  camera(scroll,0)
  map(32,0,0,0,16*6,16)
  print(" V" .. version .. "  game: fARBS  music: gRUBER  thanks: fARBS jR, lAN, dINOpUNCHER, pYJAMADS  greetz: dISC rOOM tEAM & vLAMBEER ", 128, 120, 9)
  
  camera()
  local alpha=min(frame/30,1)
  alpha=(1-sqrt(1-alpha*alpha))
  local scale=alpha*3+cos(frame/60)*1*(1-alpha)
  if frame>30 and frame<45 then
   alpha=1-(frame-30)/15
   alpha*=alpha*alpha
   camera(rnd()*alpha*10, rnd()*alpha*10)
  end
  pal(15,0)
  pal(4,0)
  pal(8,0)
  pal(2,0)
  for i=0,scale,0.1 do
   drawlogo(i)
  end
  pal(15,15)
  pal(4,4)
  pal(8,8)
  pal(2,2)
  drawlogo(scale)
  
  -- prompt to start
  if frame>120 and (frame%30<15) then
   prettyprint("press  or  to start",64-2*22, 80,7)
  end
  
  flip()
  scroll=(scroll+1)%(16*5*8)
  frame+=1
 end
end

function drawlogo(scale)
 local sw=36
 local sh=19
 sspr(88,96,sw,sh,64-sw*scale*0.5, 64-sh*scale*0.5-scale*9,sw*scale,sh*scale)
end